<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[如何给利用Hexo和GitPages搭建博客绑定个人域名]]></title>
    <url>%2F2019%2F02%2F27%2Fhexo-custom-domain%2F</url>
    <content type="text"><![CDATA[本文档不会提供如何入手域名的相关说明，如果有需要请自行搜索 今天没事上 name.com 入手了个域名： yunwanjia.io。 我寻思着放着也是放着，不如将gitPages的域名绑定一下，毕竟裸奔不怎么好。下面我们就来说一下怎么绑定个人域名。 域名解析配置 域名解析配置每个服务商都不一样，这里我提供 name.com 的配置方式 打开 name.com 的域名配置页面，找到 ==DNS记录== 菜单，点击打开。 找到一个右侧空白记录，增加一个 CNAME 的记录。 如下效果： 类型 主机 回答 TTL CNAME blog.yunwanjia.io smile962464.github.io 300 配置好后可能需要等待几分钟才能有效果，需要看提供商的效率了。 等几分钟后我们访问 blog.yunwanjia.io ,发现是gitpages的404页面，这就代表DNS已经配置好了。接下来我们可以说一下GitHub中的配置。 因为一级域名还有其他用处，所以这里使用二级域名。而且 blog 二级域名还是比较直观。 GitHub 配置这里提供两种配置方式，一种是基于原生GitHub setting中的配置进行配置，一种是基于Hexo的配置。 原生配置打开GitHub的博客仓库，如 smile962464.github.io。 打开 Settings 页面，往下翻找到 GitHub Pages 配置的地方，再往下看，找到 Custom domain 配置处，填入个人博客地址。然后点击保存就好了。 hexo配置到hexo目录的source目录下新建一个叫 ==CNAME== 的文件,注意文件名就叫 CNAME, 不是什么CNAME.txt。 文件建好后在里面填上个人博客地址。然后执行下列命令重新部署: 123$ hexo clean$ hexo g$ hexo d 总结其实就是在博客仓库下面新增一个CNAME的文件，然后在里面填上个人博客的地址。。]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何利用hexo和GitHub Pages搭建个人博客]]></title>
    <url>%2F2019%2F02%2F18%2Fhexo%2F</url>
    <content type="text"><![CDATA[本文用于帮助一点经验也没有的同学搭建一个基于GitHub Pages的无限流量个人blog。为什么用GitHub Pages呢，当然是因为没有钱。 前置GitHub账号全球最大同性交友社区，还不快来玩！ 同学们可以到: GitHub 进行账号注册。注册后新建一个名称叫做 username.github.io 的repository。 举栗子：如果你的github账号是foo，那你就建一个叫做 foo.github.io 的仓库。 等会儿我们博客的内容将会自动发布到该仓库 Node.jsNode.js: 别管我是啥，你看我功能，多棒。 下载安装地址：Node.js 小白建议直接下载LTS版本，即长期支持版，大佬随意。 注意安装的时候需要勾选： Add to PATH 选项 Git下载安装地址：Git 点击后他直接会开始下载，不要方。 注意使用上面的地址下载速度可能非常慢，建议科学上网！ 安装安装Hexo使用以下命令直接进行安装： 1$ npm install -g hexo-cli 生成博客相关文件使用以下命令生成博客相关的文件： 123$ hexo init &lt;folder&gt;$ cd /d &lt;folder&gt;$ npm install 是指你需要将博客放到哪个位置下去，如：E:/blog。注意不需要&lt;&gt;。 生成出来的相关文件如下说明： 12345678.├── _config.yml ├── package.json ├── scaffolds├── source| ├── _drafts | └── _posts└── themes _config.yml主要的配置文件，同学们记住他，等会儿他要干大事！ package.json恕我直言，此文件小白可忽略 scaffolds模版文件夹, 忽略 source相关资源文件，如发布的文章会放到这里面 themes主题都放在这里，等会儿我们会向这里面放一个叫 NexT 的主题。 配置基础配置打开 _config.yml ,找到以下几项，对照自己的信息进行更改 参数名 参数描述 title 网站标题，如: foo的博客 description 博客描述，seo用。 author 你的大名，如：小猪佩奇 language 使用的语言，注意不要看官网的，要用：zh-CN url 网站url,即上面的: .github.io 基础配置只需要这么多，其他的很多配置同学们可以自己去学习，反正我是学不会。 安装Next主题使用下列命令行直接安装 12$ cd your-hexo-site$ git clone https://github.com/iissnan/hexo-theme-next themes/next 此处的your-hexo-site即上面使用hexo init 命令时的folder 启用Next主题打开 hexo 的 _config.yml ,找到theme参数，将其改为next。 1theme: next 设置菜单增加[标签]菜单增加此菜单，需要先增加标签页面，使用以下命令行增加： 12$ cd your-hexo-site$ hexo new page tags 之后hexo会自动在 your-hexo-site/source/ 下生成文件夹：tags，并在tags中生成index.md文件。我们直接用文本编辑器打开此MD文件，并将type改为tags： 1234title: tagsdate: 2019-02-18 21:07:02type: &quot;tags&quot; // 将type改为tagscomments: false 修改完后，重新进入 NexT 的 _config.yml 文件，找到 menu 的配置处，删除tags的注释： 1234menu: home: / || home #about: /about/ || user tags: /tags/ || tags 增加[分类]菜单增加此菜单，需要先增加分类页面，使用以下命令行增加： 12$ cd your-hexo-site$ hexo new page categories 之后hexo会自动在 your-hexo-site/source/ 下生成文件夹：categories，并在categories中生成index.md文件。我们直接用文本编辑器打开此MD文件，并将type改为categories： 1234title: categoriesdate: 2019-02-18 21:07:02type: &quot;categories&quot; // 将type改为categoriescomments: false 修改完后，重新进入 NexT 的 _config.yml 文件，找到 menu 的配置处，删除categories的注释： 12345menu: home: / || home #about: /about/ || user tags: /tags/ || tags categories: /categories/ || th 增加disqus支持disqus是国外的评论平台，类似于网易云更贴，需要科学上网。实在是不能科学上网的同学请使用网易云更贴之类的，Next目前支持网易云更贴，来必力等。 首先我们需要去：disqus 注册账号。 然后去创建一个应用，创建方法网上一搜一大把，这里随便给出一个，我就不单独写了。 Hexo添加Disqus评论 应用创建好后，我们得到一个disqus的shortname，如：foo. 接下来我们在 NexT 的 _config.yml 文件中找到disqus配置，将enable改为true,将shortname改为我们在disqus的shortname。 1234disqus: enable: true shortname: foo count: true 同学们打开文章列表后可能会发现评论数展示的为：0 comments,这个可以自己去disqus的网站设置里面改。 增加不蒜子统计不蒜子用于统计全站的访问数，单页面的访问数，很好用。next已经集成了他，只需要在 NexT 的 _config.yml 文件中找到 busuanzi_count 配置，将enable改为true。 12busuanzi_count: enable: true 增加本地搜索本地搜索依赖于： hexo-generator-searchdb,所以我们需要先安装它。 1$ npm install hexo-generator-searchdb --save 安装好后，找到 Hexo 的 _config.yml文件，在该文件中的任意位置加入以下配置： 12345search: path: search.xml field: post format: html limit: 10000 然后在 Next 的 _config.yml文件中找到 local_search 配置，将enable改为true. 12local_search: enable: true 写作使用以下命令创建文章： 1$ hexo new [layout] &lt;title&gt; layout 可以不需要 举例： 1$ hexo new test 调用此命令后，会在 your-hexo-site/source/_posts 下生成test.md文件，这里面就是放我们的文章内容。 我们打开此页面后开头有几个配置，如下： 参数 描述 title 文章标题 keywords seo关键词 tags 标签 categories 分类 如果一个文章有多个tags,可以像下面这种方式： 123tags: - tags1 - tags2 部署标题都说了是基于GitHub Pages，所以我们就把博客部署到github上，那么我们需要一个插件： hexo-deployer-git 1$ npm install hexo-deployer-git --save 安装完成后，在 NexT 的 _config.yml 文件中找到 deploy 配置，参照以下配置进行修改。 123deploy: type: git repo: &lt;repository url&gt; #https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io 此处的repo就是上面github账户创建的名字叫：.github.io 的地址 改完以后，通过以下两个命令进行部署： 12hexo cleanhexo deploy 好啦，个人博客部署好啦。接下来就可以使用 .github.io 来访问你的个人博客拉。 总结这次也只是最基本的配置了以下，很多深入的都还不会，不过如果只是作为平时记笔记应该也够了。 下次会在详细说以下文章的编写，由于hexo是采用markdown的，不懂markdown语法的可以去研究研究。 ps 其实我也不会。。。 MarkDown 感谢HexoHexo 感谢NexTNexT]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F02%2F18%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
